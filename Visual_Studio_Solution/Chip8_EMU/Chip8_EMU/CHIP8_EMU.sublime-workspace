{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"OpCodeF",
				"OpCodeFncPtr"
			],
			[
				"uint",
				"uint16_t"
			],
			[
				"uin",
				"uint8_t"
			],
			[
				"U",
				"uint8_t"
			],
			[
				"OpC",
				"OpCode_LOAD_MEM_FROM_MEM"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 137.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ssc#",
				"Set Syntax: C#"
			],
			[
				"install pack",
				"Package Control: Install Package"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			],
			[
				"ss c",
				"Set Syntax: C"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			]
		],
		"width": 412.0
	},
	"console":
	{
		"height": 130.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/D/Dev/VisualStudio/CHIP8_EMU/CHIP8_EMU/CHIP8_EMU/CPU_Instructions.h",
		"/D/Dev/VisualStudio/CHIP8_EMU/CHIP8_EMU/CHIP8_EMU/CPU_Instructions.cpp",
		"/D/Dev/VisualStudio/CHIP8_EMU/CHIP8_EMU/CHIP8_EMU/Clock.cpp",
		"/D/Dev/VisualStudio/CHIP8_EMU/CHIP8_EMU/CHIP8_EMU/Clock.h",
		"/D/Dev/VisualStudio/CHIP8_EMU/CHIP8_EMU/CHIP8_EMU/Registers.h",
		"/D/Dev/VisualStudio/CHIP8_EMU/CHIP8_EMU/CHIP8_EMU/CPU.cpp",
		"/D/Dev/VisualStudio/CHIP8_EMU/CHIP8_EMU/CHIP8_EMU/CPU.h",
		"/D/Dev/VisualStudio/CHIP8_EMU/CHIP8_EMU/CHIP8_EMU/SimpleCPU.cpp",
		"/D/Dev/VisualStudio/CHIP8_EMU/CHIP8_EMU/CHIP8_EMU/SystemConfig.h",
		"/D/Dev/VisualStudio/CHIP8_EMU/CHIP8_EMU/CHIP8_EMU/MMU.h",
		"/D/Dev/VisualStudio/CHIP8_EMU/CHIP8_EMU/CHIP8_EMU/SystemConfig.cpp",
		"/D/Dev/VisualStudio/CHIP8_EMU/CHIP8_EMU/CHIP8_EMU/MMU.cpp",
		"/D/Dev/VisualStudio/CHIP8_EMU/CHIP8_EMU/CHIP8_EMU/Input.c",
		"/D/Dev/VisualStudio/CHIP8_EMU/CHIP8_EMU/CHIP8_EMU/InputMapping.cpp",
		"/D/Dev/VisualStudio/CHIP8_EMU/CHIP8_EMU/CHIP8_EMU/Debug/CHIP8_EMU.log",
		"/C/Users/Logan/Downloads/Keypad Test [Hap, 2006].ch8",
		"/D/Dev/VisualStudio/CHIP8_EMU/CHIP8_EMU/CHIP8_EMU/CHIP8_EMU.sublime-project",
		"/D/Dev/VisualStudio/Kompresso/Kompresso/Kompresso/bin/Debug/b.dat",
		"/D/Dev/VisualStudio/SimpleCPU/SimpleCPU/CPU_Instructions.cpp",
		"/D/Dev/VisualStudio/SimpleCPU/SimpleCPU/CPU.cpp",
		"/D/Dev/VisualStudio/SimpleCPU/SimpleCPU/CPU.h",
		"/D/Dev/VisualStudio/SimpleCPU/SimpleCPU/SystemConfig.h",
		"/D/Dev/VisualStudio/SimpleCPU/SimpleCPU/CPU_Instructions.h",
		"/D/Dev/VisualStudio/SimpleCPU/SimpleCPU/Registers.h",
		"/D/Dev/VisualStudio/SimpleCPU/SimpleCPU/MMU.cpp",
		"/F/semeion.names",
		"/D/Dev/neuralator/Neuralator/Neuralator.sln",
		"/D/Dev/neuralator/Neuralator.sln",
		"/D/Games/wow/realmlist.wtf",
		"/D/Dev/neuralator/Neuralator/Neuralator/Neuralator.sln",
		"/C/Windows/System32/drivers/etc/hosts",
		"/E/Steam/steamapps/common/Counter-Strike Global Offensive/csgo/cfg/autoexec.cfg",
		"/D/Dev/VisualStudio/Neuralator/Neuralator/DataSets/HandwrittenDigits/optdigits.tra",
		"/C/Users/Logan/LinuxDocs/86sim/src/Makefile",
		"/F/desktop/code/scripts/asdcryptmount",
		"/F/laptop/linux/asdsvrsync/code/scripts/mp",
		"/F/laptop/linux/asdsvrsync/code/c/test/arrind.c",
		"/F/laptop/linux/asdsvrsync/code/microcorruption/addisAbbabaHax",
		"/C/Users/Logan/AppData/Roaming/Sublime Text 3/Packages/User/Package Control.sublime-settings",
		"/C/Users/Logan/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/Logan/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/Logan/AppData/Roaming/Sublime Text 3/Installed Packages/MoveTab.sublime-package",
		"/D/Music/unsorted/TheveryBestOf-StanRogers-Barrett'sPrivateers.m4p",
		"/D/Downloads/The Magnificent Butcher [1979].x264.DVDrip(KungFu.Classics)/The Magnificent Butcher [1979].x264.DVDrip(KungFu.Classics).nfo",
		"/D/Downloads/The Magnificent Butcher [1979].x264.DVDrip(KungFu.Classics)/Carjacker.nfo"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"// key [0-9a-f] ",
			"VX",
			"case",
			"    break;    ",
			".*//.*\\n",
			".*//.*",
			"ResetTimer",
			"Subscriptions",
			"ClockKey",
			"ClockSubscription",
			"InstructionFncPtrMap",
			"\n    // Load the full instruction\n    uint16_t Instruction = FETCH_INSTRUCTION_VALUE();\n",
			"\n    // Load the full instruction\n    uint16_t Instruction = FETCH_INSTRUCTION_VALUE();\n\n",
			"uint8_t Instruction_(.*)\\(uint8_t Instruction\\)",
			"uint([0-9]+)_t(.*)=(.*)\\(uint([0-9]+)_t Instruction\\)",
			"(uint8_t)",
			"OpCodeFncPtr",
			"(* OpCodeFncPtr) = OpCode_",
			"Instruction_(.*)\\(void\\)",
			"uint8_t OpCode_",
			"SET_REG_VALUE",
			"GET_REG_VALUE",
			"JUMP_TO_ADDRESS",
			"J_JumpFlag",
			"GET_VX_REG_VALUE",
			"SET_VX_REG_VALUE",
			"VN",
			"VX",
			"uint8_t",
			"inline",
			"RegisterPtrMap",
			"REGDEFF_V0",
			"SKIP_IF_X_EQUALS_NN",
			"ExecCycle",
			"OpCodeFncPtrMap",
			"CMP_SIGNED_REG_TO_REG"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"",
			"Value",
			"    break;",
			"",
			"SetTimer",
			"Timers",
			"TimerKey",
			"Timer",
			"",
			"uint8_t Instruction_\\1\\(uint16_t Instruction\\)",
			"uint\\1_t\\2=\\3\\(uint\\4_t\\)",
			"(uint8_t Instruction)",
			"InstructionFncPtr",
			"(* OpCodeFncPtr) = Instruction_",
			"Instruction_\\1\\(uint8_t\\)",
			"uint8_t Instruction_",
			"SET_V_REG_VALUE",
			"GET_V_REG_VALUE",
			"GET_REG_VALUE",
			"SET_REG_VALUE",
			"VX",
			"VN",
			"SKIP_IF_VX_EQUALS_NN"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "CHIP8_EMU.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"regis",
				"Registers.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 307.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
